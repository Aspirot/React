{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\DeleteTask.js\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskView from \"./TaskView\";\nexport default function DeleteTask() {\n  var nav = useNavigate();\n\n  var _useParams = useParams(),\n      taskId = _useParams.taskId;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDeleted = _useState4[0],\n      setIsDeleted = _useState4[1];\n\n  useEffect(function () {\n    function fetchTask() {\n      return _fetchTask.apply(this, arguments);\n    }\n\n    function _fetchTask() {\n      _fetchTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var baseURL;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!taskId) {\n                  _context.next = 4;\n                  break;\n                }\n\n                baseURL = 'http://localhost:8082/tasks';\n                _context.next = 4;\n                return axios.get(\"\".concat(baseURL, \"/\").concat(taskId)).then(function (resp) {\n                  return setTask(resp.data);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchTask.apply(this, arguments);\n    }\n\n    fetchTask();\n  });\n\n  function deleteTask() {\n    return _deleteTask.apply(this, arguments);\n  }\n\n  function _deleteTask() {\n    _deleteTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var baseURL;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              baseURL = 'http://localhost:8082/tasks/deleteTask';\n              _context2.next = 3;\n              return axios.delete(\"\".concat(baseURL, \"/\").concat(taskId)).then(function () {\n                setIsDeleted(true);\n                console.log(\"\".concat(task, \" has been deleted!\"));\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _deleteTask.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Delete a task\"), task && !isDeleted && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TaskView, {\n    selectedTask: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Delete this task\")), !task && !isDeleted && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }, \"There is no task with \", taskId, \" as an id or it is invalid\"), isDeleted && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, \"The task \", taskId, \" has been successfully deleted\"), /*#__PURE__*/React.createElement(\"h5\", {\n    onClick: function onClick() {\n      nav(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Go to home\"));\n}","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/DeleteTask.js"],"names":["axios","useEffect","useState","useNavigate","useParams","TaskView","DeleteTask","nav","taskId","task","setTask","isDeleted","setIsDeleted","fetchTask","baseURL","get","then","resp","data","deleteTask","delete","console","log","catch","err"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAChC,MAAIC,GAAG,GAAGJ,WAAW,EAArB;;AADgC,mBAEjBC,SAAS,EAFQ;AAAA,MAE3BI,MAF2B,cAE3BA,MAF2B;;AAAA,kBAGRN,QAAQ,EAHA;AAAA;AAAA,MAGzBO,IAHyB;AAAA,MAGnBC,OAHmB;;AAAA,mBAIER,QAAQ,CAAC,KAAD,CAJV;AAAA;AAAA,MAIzBS,SAJyB;AAAA,MAIdC,YAJc;;AAMhCX,EAAAA,SAAS,CAAC,YAAM;AAAA,aAAiBY,SAAjB;AAAA;AAAA;;AAAA;AAAA,4EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXL,MADW;AAAA;AAAA;AAAA;;AAERM,gBAAAA,OAFQ,GAEE,6BAFF;AAAA;AAAA,uBAGRd,KAAK,CAACe,GAAN,WAAaD,OAAb,cAAwBN,MAAxB,GACLQ,IADK,CACA,UAACC,IAAD;AAAA,yBAAUP,OAAO,CAACO,IAAI,CAACC,IAAN,CAAjB;AAAA,iBADA,CAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;AAAA;AAAA;;AAMfL,IAAAA,SAAS;AACT,GAPQ,CAAT;;AANgC,WAejBM,UAfiB;AAAA;AAAA;;AAAA;AAAA,2EAehC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUL,cAAAA,OADV,GACoB,wCADpB;AAAA;AAAA,qBAEUd,KAAK,CAACoB,MAAN,WAAgBN,OAAhB,cAA2BN,MAA3B,GACLQ,IADK,CACA,YAAM;AAACJ,gBAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBS,gBAAAA,OAAO,CAACC,GAAR,WAAeb,IAAf;AAAyC,eADpE,EAELc,KAFK,CAEC,UAACC,GAAD;AAAA,uBAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAT;AAAA,eAFD,CAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAfgC;AAAA;AAAA;;AAuBhC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEKf,IAAI,IAAI,CAACE,SAAT,iBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAEF,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,OAAO,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CAHJ,EAQK,CAACV,IAAD,IAAS,CAACE,SAAV,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA2BH,MAA3B,+BAR5B,EASKG,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcH,MAAd,mCATlB,eAUI;AAAI,IAAA,OAAO,EAAE,mBAAM;AAACD,MAAAA,GAAG,CAAC,GAAD,CAAH;AAAU,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,CADJ;AAcH","sourcesContent":["import axios  from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport TaskView from \"./TaskView\";\r\n\r\nexport default function DeleteTask(){\r\n    let nav = useNavigate();\r\n    let {taskId} = useParams();\r\n    const [task, setTask] = useState();\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n    useEffect(() => { async function fetchTask(){\r\n        if(taskId){\r\n        const baseURL = 'http://localhost:8082/tasks';\r\n        await axios.get(`${baseURL}/${taskId}`)\r\n        .then((resp) => setTask(resp.data))}\r\n     }\r\n     fetchTask()\r\n    })\r\n\r\n    async function deleteTask(){\r\n        const baseURL = 'http://localhost:8082/tasks/deleteTask';\r\n        await axios.delete(`${baseURL}/${taskId}`)\r\n        .then(() => {setIsDeleted(true); console.log(`${task} has been deleted!`)})\r\n        .catch((err) => console.log(err))\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>Delete a task</h1>\r\n            {task && !isDeleted &&\r\n            <div>\r\n                <TaskView selectedTask={task}/>\r\n                <button onClick={deleteTask}>Delete this task</button>\r\n            </div>\r\n            }\r\n            {!task && !isDeleted && <h3>There is no task with {taskId} as an id or it is invalid</h3>}\r\n            {isDeleted && <h3>The task {taskId} has been successfully deleted</h3>}\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}