{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\CreateTask.js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function CreateTask() {\n  var _this = this;\n\n  var nav = useNavigate();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(\"In Progress\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      status = _useState6[0],\n      setStatus = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasCreated = _useState8[0],\n      setHasCreated = _useState8[1];\n\n  var statusOptions = [\"In Progress\", \"Completed\"];\n\n  function create() {\n    if (title && description && status) addTask();else console.log(\"Give all the information on the task\");\n  }\n\n  function addTask() {\n    return _addTask.apply(this, arguments);\n  }\n\n  function _addTask() {\n    _addTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var baseURL, newTask;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              baseURL = 'http://localhost:8082/tasks/addTask';\n              newTask = {\n                title: title,\n                description: description,\n                status: status\n              };\n              _context.next = 4;\n              return axios.post(\"\".concat(baseURL), newTask).then(function () {\n                setHasCreated(true);\n                console.log(newTask);\n              });\n\n            case 4:\n              setTitle('');\n              setDescription('');\n              setStatus(\"In Progress\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addTask.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Create a task\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Title :\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: function onChange(event) {\n      return setTitle(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Description :\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Status :\", /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    value: status,\n    onChange: function onChange(event) {\n      return setStatus(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, statusOptions.map(function (o) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: o,\n      key: o,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, o);\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"create\",\n    onClick: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Create\"), hasCreated && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Task has been created!\"), /*#__PURE__*/React.createElement(\"h5\", {\n    onClick: function onClick() {\n      nav(\"/\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Go to home\"));\n}","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/CreateTask.js"],"names":["axios","React","useState","useNavigate","CreateTask","nav","title","setTitle","description","setDescription","status","setStatus","hasCreated","setHasCreated","statusOptions","create","addTask","console","log","baseURL","newTask","post","then","event","target","value","map","o"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport React, { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function CreateTask(){\r\n    let nav = useNavigate();\r\n    const [title,setTitle] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [status,setStatus] = useState(\"In Progress\")\r\n    const [hasCreated,setHasCreated] = useState(false)\r\n    const statusOptions = [\"In Progress\",\"Completed\"]\r\n\r\n    function create(){\r\n        if(title && description && status)\r\n            addTask()\r\n        else\r\n            console.log(\"Give all the information on the task\")\r\n    }\r\n\r\n    async function addTask(){\r\n        const baseURL = 'http://localhost:8082/tasks/addTask';\r\n        const newTask = { title:title,description:description,status:status};\r\n        await axios.post(`${baseURL}`,newTask)\r\n        .then(() => {setHasCreated(true);console.log(newTask)})\r\n        setTitle('')\r\n        setDescription('')\r\n        setStatus(\"In Progress\")\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Create a task</h1>\r\n            <label>\r\n                Title : \r\n                <input type=\"text\" value={title} onChange={event => setTitle(event.target.value)}/>\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Description : \r\n                <input type=\"text\" value={description} onChange={event => setDescription(event.target.value)} />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Status : \r\n                <select type=\"text\" value={status} onChange={event => setStatus(event.target.value)}>\r\n                    {statusOptions.map(o => (\r\n                        <option value={o} key={o}>{o}</option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n            <br/>\r\n            <button type=\"create\" onClick={create}>Create</button>\r\n            {hasCreated && \r\n            <h3>Task has been created!</h3>}\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}