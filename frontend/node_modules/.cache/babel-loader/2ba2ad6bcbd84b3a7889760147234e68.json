{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\DeleteTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport TaskView from \"./TaskView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteTask() {\n  _s();\n\n  let nav = useNavigate();\n  let {\n    taskId\n  } = useParams();\n  const [task, setTask] = useState();\n  const [isDeleted, setIsDeleted] = useState(false);\n  useEffect(() => {\n    async function fetchTask() {\n      if (!isNaN(taskId)) {\n        const baseURL = 'http://localhost:8082/tasks';\n        await axios.get(`${baseURL}/${taskId}`).then(resp => setTask(resp.data));\n      }\n    }\n\n    fetchTask();\n  });\n\n  async function deleteTask() {\n    const baseURL = 'http://localhost:/tasks/deleteTask';\n    await axios.delete(`${baseURL}/${taskId}`).then(() => {\n      setIsDeleted(true);\n      console.log(`${task} has been deleted!`);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Delete a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), task && !isDeleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TaskView, {\n        selectedTask: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteTask,\n        children: \"Delete this task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), !task && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"There is no task with \", taskId, \" as an id or it is invalid\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this), isDeleted && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The task \", taskId, \" has been successfully deleted\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      onClick: () => {\n        nav(\"/\");\n      },\n      children: \"Go to home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteTask, \"6NRAEa9JI9qwGzp6sTsS14ZLCnA=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = DeleteTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteTask\");","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/DeleteTask.js"],"names":["axios","useEffect","useState","useNavigate","useParams","TaskView","DeleteTask","nav","taskId","task","setTask","isDeleted","setIsDeleted","fetchTask","isNaN","baseURL","get","then","resp","data","deleteTask","delete","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,MAAIC,GAAG,GAAGJ,WAAW,EAArB;AACA,MAAI;AAACK,IAAAA;AAAD,MAAWJ,SAAS,EAAxB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAE,mBAAeY,SAAf,GAA0B;AACxC,UAAG,CAACC,KAAK,CAACN,MAAD,CAAT,EAAkB;AAClB,cAAMO,OAAO,GAAG,6BAAhB;AACA,cAAMf,KAAK,CAACgB,GAAN,CAAW,GAAED,OAAQ,IAAGP,MAAO,EAA/B,EACLS,IADK,CACCC,IAAD,IAAUR,OAAO,CAACQ,IAAI,CAACC,IAAN,CADjB,CAAN;AACoC;AACtC;;AACDN,IAAAA,SAAS;AACT,GAPQ,CAAT;;AASA,iBAAeO,UAAf,GAA2B;AACvB,UAAML,OAAO,GAAG,oCAAhB;AACA,UAAMf,KAAK,CAACqB,MAAN,CAAc,GAAEN,OAAQ,IAAGP,MAAO,EAAlC,EACLS,IADK,CACA,MAAM;AAACL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBU,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEd,IAAK,oBAApB;AAAyC,KADpE,EAELe,KAFK,CAEEC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFV,CAAN;AAGH;;AAGD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKhB,IAAI,IAAI,CAACE,SAAT,iBACD;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEF;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAQK,CAACX,IAAD,iBAAS;AAAA,2CAA2BD,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YARd,EASKG,SAAS,iBAAI;AAAA,8BAAcH,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YATlB,eAUI;AAAI,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,GAAG,CAAC,GAAD,CAAH;AAAU,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GArCuBD,U;UACVH,W,EACKC,S;;;KAFKE,U","sourcesContent":["import axios  from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\nimport TaskView from \"./TaskView\";\r\n\r\nexport default function DeleteTask(){\r\n    let nav = useNavigate();\r\n    let {taskId} = useParams();\r\n    const [task, setTask] = useState();\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n\r\n    useEffect(() => { async function fetchTask(){\r\n        if(!isNaN(taskId)){\r\n        const baseURL = 'http://localhost:8082/tasks';\r\n        await axios.get(`${baseURL}/${taskId}`)\r\n        .then((resp) => setTask(resp.data))}\r\n     }\r\n     fetchTask()\r\n    })\r\n\r\n    async function deleteTask(){\r\n        const baseURL = 'http://localhost:/tasks/deleteTask';\r\n        await axios.delete(`${baseURL}/${taskId}`)\r\n        .then(() => {setIsDeleted(true); console.log(`${task} has been deleted!`)})\r\n        .catch((err) => console.log(err))\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>Delete a task</h1>\r\n            {task && !isDeleted &&\r\n            <div>\r\n                <TaskView selectedTask={task}/>\r\n                <button onClick={deleteTask}>Delete this task</button>\r\n            </div>\r\n            }\r\n            {!task && <h3>There is no task with {taskId} as an id or it is invalid</h3>}\r\n            {isDeleted && <h3>The task {taskId} has been successfully deleted</h3>}\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}