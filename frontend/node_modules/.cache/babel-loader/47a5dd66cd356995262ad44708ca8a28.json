{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\UpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateTask() {\n  _s();\n\n  let nav = useNavigate();\n  let {\n    taskId\n  } = useParams();\n  const [task, setTask] = useState();\n  useEffect(() => {\n    async function fetchTask() {\n      if (taskId) {\n        const baseURL = 'http://localhost:8082/tasks';\n        await axios.get(`${baseURL}/${taskId}`).then(resp => setTask(resp.data));\n      }\n    }\n\n    fetchTask();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), task && /*#__PURE__*/_jsxDEV(UpdateTaskView, {\n      selectedTask: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this), !task && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"There is no task with this id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      onClick: () => {\n        nav(\"/\");\n      },\n      children: \"Go to home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateTask, \"TBXbX4Q0roEfnSM+UFO3/TNF1m4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UpdateTask;\n\nconst UpdateTaskView = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Id: \", props.selectedTask._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Title: \", props.selectedTask.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", props.selectedTask.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Status: \", props.selectedTask.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = UpdateTaskView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateTask\");\n$RefreshReg$(_c2, \"UpdateTaskView\");","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/UpdateTask.js"],"names":["axios","useEffect","useState","useNavigate","useParams","UpdateTask","nav","taskId","task","setTask","fetchTask","baseURL","get","then","resp","data","UpdateTaskView","props","selectedTask","_id","title","description","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,MAAIC,GAAG,GAAGH,WAAW,EAArB;AACA,MAAI;AAACI,IAAAA;AAAD,MAAWH,SAAS,EAAxB;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAE,mBAAeS,SAAf,GAA0B;AACxC,UAAGH,MAAH,EAAU;AACN,cAAMI,OAAO,GAAG,6BAAhB;AACA,cAAMX,KAAK,CAACY,GAAN,CAAW,GAAED,OAAQ,IAAGJ,MAAO,EAA/B,EACLM,IADK,CACCC,IAAD,IAAUL,OAAO,CAACK,IAAI,CAACC,IAAN,CADjB,CAAN;AACoC;AAC1C;;AACDL,IAAAA,SAAS;AACT,GAPQ,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,IAAI,iBAAI,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFb,EAGK,CAACA,IAAD,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHd,eAII;AAAI,MAAA,OAAO,EAAE,MAAM;AAACF,QAAAA,GAAG,CAAC,GAAD,CAAH;AAAU,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAvBuBD,U;UACVF,W,EACKC,S;;;KAFKC,U;;AAyBxB,MAAMW,cAAc,GAAIC,KAAD,IAAW;AAC9B,sBACE;AAAA,2BACM;AAAA,8BACI;AAAA,2BAASA,KAAK,CAACC,YAAN,CAAmBC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,8BAAYF,KAAK,CAACC,YAAN,CAAmBE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,oCAAkBH,KAAK,CAACC,YAAN,CAAmBG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,+BAAaJ,KAAK,CAACC,YAAN,CAAmBI,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXH;;MAAMN,c","sourcesContent":["import axios  from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nexport default function UpdateTask(){\r\n    let nav = useNavigate();\r\n    let {taskId} = useParams();\r\n    const [task, setTask] = useState();\r\n\r\n    useEffect(() => { async function fetchTask(){\r\n        if(taskId){\r\n            const baseURL = 'http://localhost:8082/tasks';\r\n            await axios.get(`${baseURL}/${taskId}`)\r\n            .then((resp) => setTask(resp.data))}\r\n     }\r\n     fetchTask()\r\n    })\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Update a task</h1>\r\n            {task && <UpdateTaskView selectedTask={task}/>}\r\n            {!task && <h3>There is no task with this id</h3>}\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UpdateTaskView = (props) => {\r\n    return (\r\n      <div>\r\n            <ul>\r\n                <li>Id: {props.selectedTask._id}</li>\r\n                <li>Title: {props.selectedTask.title}</li>\r\n                <li>Description: {props.selectedTask.description}</li>\r\n                <li>Status: {props.selectedTask.status}</li>\r\n            </ul>\r\n      </div>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}