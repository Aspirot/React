{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\UpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateTask() {\n  _s();\n\n  let nav = useNavigate();\n  let {\n    taskId\n  } = useParams();\n  const [task, setTask] = useState();\n  const statusOptions = [\"In Progress\", \"Completed\"];\n  useEffect(() => {\n    async function fetchTask() {\n      if (taskId) {\n        const baseURL = 'http://localhost:8082/tasks';\n        await axios.get(`${baseURL}/${taskId}`).then(resp => setTask(resp.data));\n      }\n    }\n\n    fetchTask();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), task && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task.title,\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task.title,\n          onChange: event => setDescription(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          value: task.status,\n          onChange: event => setStatus(event.target.value),\n          children: statusOptions.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: o,\n            children: o\n          }, o, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), !task && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"There is no task with this id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      onClick: () => {\n        nav(\"/\");\n      },\n      children: \"Go to home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateTask, \"TBXbX4Q0roEfnSM+UFO3/TNF1m4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UpdateTask;\n\nconst UpdateTaskView = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Id: \", props.selectedTask._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Title: \", props.selectedTask.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", props.selectedTask.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Status: \", props.selectedTask.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = UpdateTaskView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateTask\");\n$RefreshReg$(_c2, \"UpdateTaskView\");","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/UpdateTask.js"],"names":["axios","useEffect","useState","useNavigate","useParams","UpdateTask","nav","taskId","task","setTask","statusOptions","fetchTask","baseURL","get","then","resp","data","title","event","setTitle","target","value","setDescription","status","setStatus","map","o","submit","UpdateTaskView","props","selectedTask","_id","description"],"mappings":"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","sourcesContent":["import axios  from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nexport default function UpdateTask(){\r\n    let nav = useNavigate();\r\n    let {taskId} = useParams();\r\n    const [task, setTask] = useState();\r\n    const statusOptions = [\"In Progress\",\"Completed\"]\r\n\r\n    useEffect(() => { async function fetchTask(){\r\n        if(taskId){\r\n            const baseURL = 'http://localhost:8082/tasks';\r\n            await axios.get(`${baseURL}/${taskId}`)\r\n            .then((resp) => setTask(resp.data))}\r\n     }\r\n     fetchTask()\r\n    })\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Update a task</h1>\r\n            {task && \r\n            <div>\r\n                <label>\r\n                Title : \r\n                <input type=\"text\" value={task.title} onChange={event => setTitle(event.target.value)}/>\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Description : \r\n                <input type=\"text\" value={task.title} onChange={event => setDescription(event.target.value)} />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Status : \r\n                <select type=\"text\" value={task.status} onChange={event => setStatus(event.target.value)}>\r\n                    {statusOptions.map(o => (\r\n                        <option value={o} key={o}>{o}</option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n            <br/>\r\n            <button type=\"submit\" onClick={submit}>Submit</button>\r\n            </div>}\r\n            {!task && <h3>There is no task with this id</h3>}\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UpdateTaskView = (props) => {\r\n    return (\r\n      <div>\r\n            <ul>\r\n                <li>Id: {props.selectedTask._id}</li>\r\n                <li>Title: {props.selectedTask.title}</li>\r\n                <li>Description: {props.selectedTask.description}</li>\r\n                <li>Status: {props.selectedTask.status}</li>\r\n            </ul>\r\n      </div>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}