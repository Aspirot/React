{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTask() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('');\n  const [hasCreated, setHasCreated] = useState(false);\n  const statusOptions = [\"In Progress\", \"Completed\"];\n\n  function submit() {\n    if (title && description && status) addTask();else console.log(\"Give all the information on the task\");\n  }\n\n  async function addTask() {\n    const baseURL = 'http://localhost:8082/tasks/addTask';\n    await axios.delete(`${baseURL}`).then(() => {\n      setIsDeleted(true);\n      console.log(`${task} has been deleted!`);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Title :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Status :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"text\",\n        value: status,\n        onChange: event => setStatus(event.target.value),\n        children: statusOptions.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o,\n          children: o\n        }, o, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: submit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), hasCreated && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Task \", title, \" has been created!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateTask, \"VOTytY91ubpNit/X5rvzp/uXg28=\");\n\n_c = CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/CreateTask.js"],"names":["axios","useEffect","useState","CreateTask","title","setTitle","description","setDescription","status","setStatus","hasCreated","setHasCreated","statusOptions","submit","addTask","console","log","baseURL","delete","then","setIsDeleted","task","catch","err","event","target","value","map","o"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,WAAD,EAAaC,cAAb,IAA+BL,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA6BT,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAMU,aAAa,GAAG,CAAC,aAAD,EAAe,WAAf,CAAtB;;AAEA,WAASC,MAAT,GAAiB;AACb,QAAGT,KAAK,IAAIE,WAAT,IAAwBE,MAA3B,EACIM,OAAO,GADX,KAGIC,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACP;;AAED,iBAAeF,OAAf,GAAwB;AACpB,UAAMG,OAAO,GAAG,qCAAhB;AACA,UAAMjB,KAAK,CAACkB,MAAN,CAAc,GAAED,OAAQ,EAAxB,EACLE,IADK,CACA,MAAM;AAACC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBL,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEK,IAAK,oBAApB;AAAyC,KADpE,EAELC,KAFK,CAEEC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAFV,CAAN;AAGH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,yCAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEnB,KAA1B;AAAiC,QAAA,QAAQ,EAAEoB,KAAK,IAAInB,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,+CAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEpB,WAA1B;AAAuC,QAAA,QAAQ,EAAEkB,KAAK,IAAIjB,cAAc,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,0CAEI;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAElB,MAA3B;AAAmC,QAAA,QAAQ,EAAEgB,KAAK,IAAIf,SAAS,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA/D;AAAA,kBACKd,aAAa,CAACe,GAAd,CAAkBC,CAAC,iBAChB;AAAQ,UAAA,KAAK,EAAEA,CAAf;AAAA,oBAA2BA;AAA3B,WAAuBA,CAAvB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAoBI;AAAA;AAAA;AAAA;AAAA,YApBJ,eAqBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEf,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,EAsBKH,UAAU,iBACX;AAAA,0BAAUN,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAhDuBD,U;;KAAAA,U","sourcesContent":["import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\nexport default function CreateTask(){\r\n    const [title,setTitle] = useState('')\r\n    const [description,setDescription] = useState('')\r\n    const [status,setStatus] = useState('')\r\n    const [hasCreated,setHasCreated] = useState(false)\r\n    const statusOptions = [\"In Progress\",\"Completed\"]\r\n\r\n    function submit(){\r\n        if(title && description && status)\r\n            addTask()\r\n        else\r\n            console.log(\"Give all the information on the task\")\r\n    }\r\n\r\n    async function addTask(){\r\n        const baseURL = 'http://localhost:8082/tasks/addTask';\r\n        await axios.delete(`${baseURL}`)\r\n        .then(() => {setIsDeleted(true); console.log(`${task} has been deleted!`)})\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Create a task</h1>\r\n            <label>\r\n                Title : \r\n                <input type=\"text\" value={title} onChange={event => setTitle(event.target.value)}/>\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Description : \r\n                <input type=\"text\" value={description} onChange={event => setDescription(event.target.value)} />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Status : \r\n                <select type=\"text\" value={status} onChange={event => setStatus(event.target.value)}>\r\n                    {statusOptions.map(o => (\r\n                        <option value={o} key={o}>{o}</option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n            <br/>\r\n            <button type=\"submit\" onClick={submit}>Submit</button>\r\n            {hasCreated && \r\n            <h3>Task {title} has been created!</h3>}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}