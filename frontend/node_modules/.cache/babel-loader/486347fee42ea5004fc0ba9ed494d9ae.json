{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\React\\\\React_Project\\\\frontend\\\\src\\\\ReadTasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport TaskView from \"./TaskView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReadTasks() {\n  _s();\n\n  let nav = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:8082/tasks').then(resp => setTasks(resp.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Read tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          setSelectedTask(t);\n        },\n        children: t.title\n      }, t._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), selectedTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TaskView, {\n          selectedTask: selectedTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => {\n            nav(`/Tasks/Delete/${selectedTask._id}`);\n          },\n          children: \"Go to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          onClick: () => {\n            nav(`/Tasks/Update/${selectedTask._id}`);\n          },\n          children: \"Go to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      onClick: () => {\n        nav(\"/\");\n      },\n      children: \"Go to home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadTasks, \"69bg9otwRRxtr9j1KhtwdXOipek=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ReadTasks;\n\nfunction EmptyView() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select task to display details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = EmptyView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReadTasks\");\n$RefreshReg$(_c2, \"EmptyView\");","map":{"version":3,"sources":["E:/Workspace/React/React_Project/frontend/src/ReadTasks.js"],"names":["useState","useEffect","axios","useNavigate","TaskView","ReadTasks","nav","tasks","setTasks","selectedTask","setSelectedTask","get","then","resp","data","map","t","title","_id","EmptyView"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAC/B,MAAIC,GAAG,GAAGH,WAAW,EAArB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAG,MAAK;AACbC,IAAAA,KAAK,CAACS,GAAN,CAAU,6BAAV,EACCC,IADD,CACOC,IAAD,IAAUL,QAAQ,CAACK,IAAI,CAACC,IAAN,CADxB;AAEF,GAHO,EAGL,EAHK,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKP,KAAK,CAACQ,GAAN,CAAUC,CAAC,iBACR;AAAgB,QAAA,OAAO,EAAE,MAAM;AAACN,UAAAA,eAAe,CAACM,CAAD,CAAf;AAAmB,SAAnD;AAAA,kBAAuDA,CAAC,CAACC;AAAzD,SAASD,CAAC,CAACE,GAAX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEUT,YAAD,gBACC;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,YAAY,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,OAAO,EAAE,MAAM;AAACH,YAAAA,GAAG,CAAE,iBAAgBG,YAAY,CAACS,GAAI,EAAnC,CAAH;AAAyC,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,OAAO,EAAE,MAAM;AAACZ,YAAAA,GAAG,CAAE,iBAAgBG,YAAY,CAACS,GAAI,EAAnC,CAAH;AAAyC,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAOC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cATV;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAkBI;AAAI,MAAA,OAAO,EAAE,MAAM;AAACZ,QAAAA,GAAG,CAAC,GAAD,CAAH;AAAU,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAhCuBD,S;UACVF,W;;;KADUE,S;;AAiCxB,SAASc,SAAT,GAAqB;AACjB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANMA,S","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios  from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport TaskView from \"./TaskView\";\r\n\r\nexport default function ReadTasks(){\r\n    let nav = useNavigate();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n    useEffect(  () =>{\r\n        axios.get('http://localhost:8082/tasks')\r\n        .then((resp) => setTasks(resp.data))\r\n     }, [])\r\n\r\n    return(\r\n        <div>\r\n            <h1>Read tasks</h1>\r\n            <ul>\r\n                {tasks.map(t => (\r\n                    <li key={t._id} onClick={() => {setSelectedTask(t)}} >{t.title}</li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <h2>Task details</h2>\r\n                    {(selectedTask) \r\n                    ? <div>\r\n                        <TaskView selectedTask={selectedTask}/>\r\n                        <h5 onClick={() => {nav(`/Tasks/Delete/${selectedTask._id}`)}}>Go to home</h5>\r\n                        <h5 onClick={() => {nav(`/Tasks/Update/${selectedTask._id}`)}}>Go to home</h5>\r\n                    </div>\r\n                    \r\n                    : <EmptyView/>}\r\n            </div>\r\n            <h5 onClick={() => {nav(\"/\");}}>Go to home</h5>\r\n        </div>\r\n    )\r\n}\r\nfunction EmptyView() {\r\n    return (\r\n      <div>\r\n        <p>Select task to display details</p>\r\n      </div>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}